

class Solution
{
    public:
    
    //Function to remove a loop in the linked list.
  void removeLoop(Node* head)
{
    if (!head) return;

    Node* fast = head;
    Node* slow = head;

    while (fast != NULL && fast->next != NULL)
    {
        slow = slow->next;
        fast = fast->next->next;

        if (slow == fast)
        {
            Node* entry = head;
            while (entry != slow)
            {
                entry = entry->next;
                slow = slow->next;
            }

            while (slow->next != entry)
                slow = slow->next;

            slow->next = NULL;
            return;
        }
    }
}

};

Input:
N = 3
value[] = {1,3,4}
X = 2
Output: 1
Explanation: The link list looks like
1 -> 3 -> 4
     ^    |
     |____|    
A loop is present. If you remove it 
successfully, the answer will be 1. 

Example 2:

Input:
N = 4
value[] = {1,8,3,4}
X = 0
Output: 1
Explanation: The Linked list does not 
contains any loop. 

Example 3:

Input:
N = 4
value[] = {1,2,3,4}
X = 1
Output: 1
Explanation: The link list looks like 
1 -> 2 -> 3 -> 4
^              |
|______________|
A loop is present. 
If you remove it successfully, 
the answer will be 1. 
