/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

int binarytodecimal(string s)
{int dec=0;
 int base=1;
    int l=(int)s.length();
   
    for(int i=l-1;i>=0;i--)
    {
        if (s[i]=='1')
        dec+=base;
        base*=2;
    }
    return dec;
}
    int getDecimalValue(ListNode* head) {
        string s;
        while(head!=NULL)
        {
            int data=head->val;
            char x=data==1?'1':'0';
            s=s+x;
            head=head->next;
            
        }
        int ans=binarytodecimal(s);
        return ans;
    }
};

Given head which is a reference node to a singly-linked list. The value of each node in the linked list is either 0 or 1. The linked list holds the binary representation of a number.

Return the decimal value of the number in the linked list.

The most significant bit is at the head of the linked list.

 

Example 1:


Input: head = [1,0,1]
Output: 5
Explanation: (101) in base 2 = (5) in base 10
Example 2:

Input: head = [0]
Output: 0
